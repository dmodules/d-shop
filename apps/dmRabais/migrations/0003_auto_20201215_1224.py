# Generated by Django 2.2.17 on 2020-12-15 17:24

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dshop', '0001_initial'),
        ('dmRabais', '0002_dmrabaispercategory_categories'),
    ]

    operations = [
        migrations.AlterField(
            model_name='dmrabaispercategory',
            name='amount',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='Un montant fixe à retirer du prix original, laisser vide pour privilégier le pourcentage.', max_digits=30, null=True, verbose_name='Amount'),
        ),
        migrations.AlterField(
            model_name='dmrabaispercategory',
            name='name',
            field=models.CharField(max_length=100, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='dmrabaispercategory',
            name='percent',
            field=models.PositiveSmallIntegerField(blank=True, help_text="Un pourcentage à retirer du prix original, ne sera pas utilisé s'il y a un montant dans 'Montant fixe'.", null=True, verbose_name='Percent'),
        ),
        migrations.CreateModel(
            name='dmPromoCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('code', models.CharField(max_length=120, verbose_name='Code')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('valid_from', models.DateTimeField(default=datetime.datetime.now, verbose_name='Start at')),
                ('valid_until', models.DateTimeField(blank=True, help_text="Leave blank if you doesn't want this code to expire after a specific time.", null=True, verbose_name='End at')),
                ('valid_uses', models.PositiveSmallIntegerField(default=0, help_text="Leave to 0 if you doesn't want this code to expire after a specific number of customer's uses.", verbose_name='Number of Customer')),
                ('categories', models.ManyToManyField(help_text='Leave blank if you want to apply to all product.', related_name='promocode', to='dshop.ProductCategory', verbose_name='Categories')),
            ],
            options={
                'verbose_name': 'Promo Code',
                'verbose_name_plural': 'Promo Codes',
            },
        ),
    ]
