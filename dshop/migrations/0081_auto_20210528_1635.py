# Generated by Django 2.2.18 on 2021-05-28 16:35

from django.db import migrations
from django.conf import settings
from django.core.exceptions import ObjectDoesNotExist

def forwards_func(apps, schema_editor):
    MyModel = apps.get_model('dshop', 'Attribute')
    MyModelTranslation = apps.get_model('dshop', 'AttributeTranslation')

    for object in MyModel.objects.all():
        MyModelTranslation.objects.create(
            master_id=object.pk,
            language_code=settings.LANGUAGE_CODE,
            name_trans=object.name
        )
def backwards_func(apps, schema_editor):
    MyModel = apps.get_model('dshop', 'Attribute')
    MyModelTranslation = apps.get_model('dshop', 'AttributeTranslation')

    for object in MyModel.objects.all():
        translation = _get_translation(object, MyModelTranslation)
        object.name = translation.name_trans
        object.save()   # Note this only calls Model.save()

def _get_translation(object, MyModelTranslation):
    translations = MyModelTranslation.objects.filter(master_id=object.pk)
    try:
        return translations.get(language_code=settings.LANGUAGE_CODE)
    except ObjectDoesNotExist:
        try:
            return translations.get(language_code=settings.PARLER_DEFAULT_LANGUAGE_CODE)
        except ObjectDoesNotExist:
            return translations.get()


class Migration(migrations.Migration):

    dependencies = [
        ('dshop', '0080_attributetranslation'),
    ]

    operations = [
        migrations.RunPython(forwards_func, backwards_func),
    ]
