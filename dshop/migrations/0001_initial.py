# Generated by Django 2.2.17 on 2020-12-09 12:52

import colorfield.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import django_fsm
import djangocms_text_ckeditor.fields
import dshop.models
import filer.fields.file
import filer.fields.image
import parler.fields
import parler.models
import shop.models.fields
import shop.models.product
import shop.money.fields
import shop.payment.workflows


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('filer', '0012_file_mime_type'),
        ('auth', '0011_update_proxy_permissions'),
        ('cms', '0022_auto_20180620_1551'),
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BillingAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.SmallIntegerField(db_index=True, default=0, help_text='Priority for using this address')),
                ('name', models.CharField(max_length=1024, verbose_name='Nom complet')),
                ('address1', models.CharField(max_length=1024, verbose_name='Adresse 1')),
                ('address2', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Adresse 2')),
                ('country', models.CharField(max_length=4, verbose_name='Pays')),
                ('province', models.CharField(max_length=1024, verbose_name='Province')),
                ('city', models.CharField(max_length=1024, verbose_name='Ville')),
                ('zip_code', models.CharField(max_length=255, verbose_name='Code postal')),
            ],
            options={
                'verbose_name': 'Billing Address',
                'verbose_name_plural': 'Billing Addresses',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('extra', shop.models.fields.JSONField(verbose_name='Arbitrary information for this cart')),
                ('billing_address', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='+', to='dshop.BillingAddress')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='customer', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('recognized', shop.models.fields.ChoiceEnumField(help_text='Designates the state the customer is recognized as.', verbose_name='Recognized as')),
                ('last_access', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Last accessed')),
                ('extra', shop.models.fields.JSONField(editable=False, verbose_name='Extra information about this customer')),
                ('number', models.PositiveIntegerField(default=None, null=True, unique=True, verbose_name='Customer Number')),
                ('salutation', models.CharField(choices=[('mrs', 'Mrs.'), ('mr', 'Mr.'), ('na', '(n/a)')], max_length=5, verbose_name='Salutation')),
            ],
        ),
        migrations.CreateModel(
            name='dmBlocContact',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='dshop_dmbloccontact', serialize=False, to='cms.CMSPlugin')),
                ('horaire_top', models.CharField(max_length=50, verbose_name='Horaire - Haut')),
                ('horaire_bot', models.CharField(max_length=50, verbose_name='Horaire - Bas')),
                ('phone_top', models.CharField(max_length=50, verbose_name='Téléphone - Haut')),
                ('phone_bot', models.CharField(default='Appelez-nous', max_length=50, verbose_name='Téléphone - Bas')),
                ('where_top', models.CharField(max_length=120, verbose_name='Adresse - Haut')),
                ('where_bot', models.CharField(default='Notre adresse', max_length=50, verbose_name='Adresse - Bas')),
                ('link_label', models.CharField(default='Contacter Nancy', max_length=50, verbose_name='Texte du bouton')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='dmBlocEntete',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='dshop_dmblocentete', serialize=False, to='cms.CMSPlugin')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Titre')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='dmBlocEtapesChild',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='dshop_dmblocetapeschild', serialize=False, to='cms.CMSPlugin')),
                ('image', models.ImageField(blank=True, help_text='Dimension : 160x160.', null=True, upload_to='', verbose_name='Image')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titre')),
                ('text', models.CharField(blank=True, max_length=200, null=True, verbose_name='Texte')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='dmBlocEtapesParent',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='dshop_dmblocetapesparent', serialize=False, to='cms.CMSPlugin')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titre')),
                ('subtitle', models.CharField(blank=True, max_length=200, null=True, verbose_name='Sous-titre')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='dmBlockCalltoaction',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='dshop_dmblockcalltoaction', serialize=False, to='cms.CMSPlugin')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titre')),
                ('subtitle', models.CharField(blank=True, max_length=100, null=True, verbose_name='Sous-titre')),
                ('text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Texte')),
                ('title_color', colorfield.fields.ColorField(default='#292b2c', max_length=18, verbose_name='Couleur du titre')),
                ('subtitle_color', colorfield.fields.ColorField(default='#292b2c', max_length=18, verbose_name='Couleur du sous-titre')),
                ('text_color', colorfield.fields.ColorField(default='#292b2c', max_length=18, verbose_name='Couleur du texte')),
                ('btn_label', models.CharField(blank=True, max_length=25, null=True, verbose_name="Button's Label")),
                ('btn_url', models.CharField(blank=True, max_length=255, null=True, verbose_name="Button's URL")),
                ('bg_color', colorfield.fields.ColorField(blank=True, default=None, max_length=18, null=True, verbose_name='Couleur de fond')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='dmBlockSalesChild',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='dshop_dmblocksaleschild', serialize=False, to='cms.CMSPlugin')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titre')),
                ('text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Texte')),
                ('txt_color', colorfield.fields.ColorField(default='#292b2c', max_length=18, verbose_name='Couleur du texte')),
                ('btn_label', models.CharField(blank=True, max_length=25, null=True, verbose_name="Button's Label")),
                ('btn_url', models.CharField(blank=True, max_length=255, null=True, verbose_name="Button's URL")),
                ('bg_color', colorfield.fields.ColorField(default='#f2f2f3', max_length=18, verbose_name='Couleur de fond')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='dmBlockSalesParent',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='dshop_dmblocksalesparent', serialize=False, to='cms.CMSPlugin')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titre')),
                ('text', djangocms_text_ckeditor.fields.HTMLField(blank=True, null=True, verbose_name='Texte')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='dmBlocSliderChild',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='dshop_dmblocsliderchild', serialize=False, to='cms.CMSPlugin')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titre')),
                ('subtitle', models.CharField(blank=True, max_length=200, null=True, verbose_name='Sous-titre')),
                ('title_color', colorfield.fields.ColorField(blank=True, default=None, max_length=18, null=True, verbose_name='Couleur du titre')),
                ('subtitle_color', colorfield.fields.ColorField(blank=True, default=None, max_length=18, null=True, verbose_name='Couleur du sous-titre')),
                ('position_text', models.PositiveSmallIntegerField(choices=[(1, 'Gauche'), (2, 'Centre'), (3, 'Droite')], default=3, verbose_name='Position du texte')),
                ('btn_label', models.CharField(blank=True, max_length=30, null=True, verbose_name='Nom du lien')),
                ('btn_url', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Adresse URL du lien')),
                ('btn_blank', models.BooleanField(default=False, verbose_name="Le lien s'ouvre dans un nouvel onglet ?")),
                ('bg_color', colorfield.fields.ColorField(blank=True, default=None, max_length=18, null=True, verbose_name='Couleur de fond')),
                ('image', models.ImageField(blank=True, help_text="Laisser vide pour ne pas afficher d'image.", null=True, upload_to='', verbose_name='Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='dmBlocSliderParent',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='dshop_dmblocsliderparent', serialize=False, to='cms.CMSPlugin')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='dmBlocTextMedia',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='dshop_dmbloctextmedia', serialize=False, to='cms.CMSPlugin')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titre')),
                ('subtitle', models.CharField(blank=True, max_length=200, null=True, verbose_name='Sous-titre')),
                ('text', djangocms_text_ckeditor.fields.HTMLField(blank=True, null=True, verbose_name='Texte')),
                ('image', models.ImageField(blank=True, help_text="Dimension : 398x531. Laisser vide pour ne pas afficher d'image.", null=True, upload_to='', verbose_name='Image')),
                ('colposition', models.PositiveSmallIntegerField(choices=[(0, 'Gauche'), (1, 'Droite')], default=1, verbose_name="Position de l'image")),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='dmInfolettre',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='dshop_dminfolettre', serialize=False, to='cms.CMSPlugin')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titre')),
                ('subtitle', models.CharField(blank=True, max_length=200, null=True, verbose_name='Sous-titre')),
                ('text', djangocms_text_ckeditor.fields.HTMLField(blank=True, null=True, verbose_name='Texte')),
                ('label', models.CharField(default="S'inscrire à l'infolettre", max_length=200, verbose_name='Texte du bouton')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='dmProductsByCategory',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='dshop_dmproductsbycategory', serialize=False, to='cms.CMSPlugin')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titre')),
                ('text', djangocms_text_ckeditor.fields.HTMLField(blank=True, null=True, verbose_name='Texte')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='dmProductsCategories',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='dshop_dmproductscategories', serialize=False, to='cms.CMSPlugin')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titre')),
                ('text', djangocms_text_ckeditor.fields.HTMLField(blank=True, null=True, verbose_name='Texte')),
                ('label', models.CharField(blank=True, default='Voir tout', help_text='Laisser vide pour ne pas afficher le bouton vers les produits.', max_length=200, null=True, verbose_name='Texte du bouton')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='dmProductsVedette',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='dshop_dmproductsvedette', serialize=False, to='cms.CMSPlugin')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titre')),
                ('text', djangocms_text_ckeditor.fields.HTMLField(blank=True, null=True, verbose_name='Texte')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='dmSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
            options={
                'verbose_name': 'Site',
                'verbose_name_plural': 'Site',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', django_fsm.FSMField(default='new', max_length=50, protected=True, verbose_name='Status')),
                ('currency', models.CharField(editable=False, help_text='Currency in which this order was concluded', max_length=7)),
                ('_subtotal', models.DecimalField(decimal_places=2, max_digits=30, verbose_name='Subtotal')),
                ('_total', models.DecimalField(decimal_places=2, max_digits=30, verbose_name='Total')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('extra', shop.models.fields.JSONField(help_text='Arbitrary information for this order object on the moment of purchase.', verbose_name='Extra fields')),
                ('stored_request', shop.models.fields.JSONField(help_text='Parts of the Request objects on the moment of purchase.')),
                ('number', models.PositiveIntegerField(default=None, null=True, unique=True, verbose_name='Order Number')),
                ('shipping_address_text', models.TextField(blank=True, help_text='Shipping address at the moment of purchase.', null=True, verbose_name='Shipping Address')),
                ('billing_address_text', models.TextField(blank=True, help_text='Billing address at the moment of purchase.', null=True, verbose_name='Billing Address')),
                ('token', models.CharField(editable=False, help_text='Secret key to verify ownership on detail view without requiring authentication.', max_length=40, null=True, verbose_name='Token')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='dshop.Customer', verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
            },
            bases=(shop.payment.workflows.ManualPaymentWorkflowMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('active', models.BooleanField(default=True, help_text='Is this product publicly visible.', verbose_name='Active')),
                ('product_name', models.CharField(max_length=255, verbose_name='Nom du produit')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('is_vedette', models.BooleanField(default=False, verbose_name='En vedette ?')),
                ('order', models.PositiveIntegerField(db_index=True, verbose_name='Sort by')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['order'],
            },
            bases=(dshop.models.CMSPageReferenceMixin, parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProductFilter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du filtre')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Ordre')),
            ],
            options={
                'verbose_name': 'Filtre de produit',
                'verbose_name_plural': 'Filtres de produit',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ProductDefault',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dshop.Product')),
                ('product_code', models.CharField(help_text='Un code unique.', max_length=255, unique=True, verbose_name='Code du produit')),
                ('unit_price', shop.money.fields.MoneyField(decimal_places=3, help_text='Net price for this product', verbose_name='Unit price')),
                ('quantity', models.PositiveIntegerField(default=0, help_text='Available quantity in stock', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantity')),
            ],
            options={
                'verbose_name': 'Produit par défaut',
                'verbose_name_plural': 'Produits par défaut',
            },
            bases=(shop.models.product.AvailableProductMixin, 'dshop.product'),
        ),
        migrations.CreateModel(
            name='ProductVariable',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dshop.Product')),
            ],
            options={
                'verbose_name': 'Produit variable',
                'verbose_name_plural': 'Produits variables',
            },
            bases=('dshop.product',),
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.SmallIntegerField(db_index=True, default=0, help_text='Priority for using this address')),
                ('name', models.CharField(max_length=1024, verbose_name='Nom complet')),
                ('address1', models.CharField(max_length=1024, verbose_name='Adresse 1')),
                ('address2', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Adresse 2')),
                ('country', models.CharField(max_length=4, verbose_name='Pays')),
                ('province', models.CharField(max_length=1024, verbose_name='Province')),
                ('city', models.CharField(max_length=1024, verbose_name='Ville')),
                ('zip_code', models.CharField(max_length=255, verbose_name='Code postal')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dshop.Customer')),
            ],
            options={
                'verbose_name': 'Shipping Address',
                'verbose_name_plural': 'Shipping Addresses',
            },
        ),
        migrations.CreateModel(
            name='ProductPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Page')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dshop.Product')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'abstract': False,
                'unique_together': {('page', 'product')},
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.SmallIntegerField(default=0)),
                ('image', filer.fields.image.FilerImageField(on_delete=django.db.models.deletion.CASCADE, to=settings.FILER_IMAGE_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dshop.Product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'ordering': ['order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la catégorie')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Ordre')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dshop.ProductCategory', verbose_name='Catégorie parente')),
            ],
            options={
                'verbose_name': 'Catégorie de produit',
                'verbose_name_plural': 'Catégories de produit',
                'ordering': ['order', 'parent__name', 'name'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='categories',
            field=models.ManyToManyField(to='dshop.ProductCategory', verbose_name='Catégories'),
        ),
        migrations.AddField(
            model_name='product',
            name='cms_pages',
            field=models.ManyToManyField(through='dshop.ProductPage', to='cms.Page'),
        ),
        migrations.AddField(
            model_name='product',
            name='filters',
            field=models.ManyToManyField(to='dshop.ProductFilter', verbose_name='Filtres'),
        ),
        migrations.AddField(
            model_name='product',
            name='images',
            field=models.ManyToManyField(through='dshop.ProductImage', to=settings.FILER_IMAGE_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='main_image',
            field=filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='main_image', to=settings.FILER_IMAGE_MODEL, verbose_name='Image principale'),
        ),
        migrations.AddField(
            model_name='product',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_dshop.product_set+', to='contenttypes.ContentType'),
        ),
        migrations.CreateModel(
            name='OrderPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', shop.money.fields.MoneyField(help_text='How much was paid with this particular transfer.', verbose_name='Amount paid')),
                ('transaction_id', models.CharField(help_text="The transaction processor's reference", max_length=255, verbose_name='Transaction ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Received at')),
                ('payment_method', models.CharField(help_text='The payment backend used to process the purchase', max_length=50, verbose_name='Payment method')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dshop.Order', verbose_name='Order')),
            ],
            options={
                'verbose_name': 'Order payment',
                'verbose_name_plural': 'Order payments',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, help_text='Product name at the moment of purchase.', max_length=255, null=True, verbose_name='Product name')),
                ('product_code', models.CharField(blank=True, help_text='Product code at the moment of purchase.', max_length=255, null=True, verbose_name='Product code')),
                ('_unit_price', models.DecimalField(decimal_places=2, help_text='Products unit price at the moment of purchase.', max_digits=30, null=True, verbose_name='Unit price')),
                ('_line_total', models.DecimalField(decimal_places=2, help_text='Line total on the invoice at the moment of purchase.', max_digits=30, null=True, verbose_name='Line Total')),
                ('extra', shop.models.fields.JSONField(help_text='Arbitrary information for this order item', verbose_name='Extra fields')),
                ('quantity', models.PositiveIntegerField(verbose_name='Ordered quantity')),
                ('variables', shop.models.fields.JSONField(verbose_name='Données')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='dshop.Order', verbose_name='Order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dshop.Product', verbose_name='Product')),
            ],
        ),
        migrations.CreateModel(
            name='dmSiteSocial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social', models.PositiveSmallIntegerField(choices=[(1, 'Facebook'), (2, 'Instagram'), (3, 'Youtube')], default=1, verbose_name='Réseau social')),
                ('url', models.CharField(max_length=1000, verbose_name='Lien vers le réseau')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social', to='dshop.dmSite')),
            ],
            options={
                'verbose_name': 'Réseau social',
                'verbose_name_plural': 'Réseaux sociaux',
            },
        ),
        migrations.CreateModel(
            name='dmSiteContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=25, null=True, verbose_name='Téléphone')),
                ('email', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Courriel')),
                ('address', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Adresse')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='dshop.dmSite')),
            ],
            options={
                'verbose_name': 'Contacts',
                'verbose_name_plural': 'Contacts',
            },
        ),
        migrations.CreateModel(
            name='dmBlocEnteteVideo',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='dshop_dmblocentetevideo', serialize=False, to='cms.CMSPlugin')),
                ('videofile', filer.fields.file.FilerFileField(on_delete=django.db.models.deletion.CASCADE, to='filer.File', verbose_name='Fichier vidéo')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(blank=True, help_text='Product code of added item.', max_length=255, null=True, verbose_name='Product code')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('extra', shop.models.fields.JSONField(verbose_name='Arbitrary information for this cart item')),
                ('quantity', models.PositiveIntegerField()),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='dshop.Cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dshop.Product')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='customer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to='dshop.Customer', verbose_name='Customer'),
        ),
        migrations.AddField(
            model_name='cart',
            name='shipping_address',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='+', to='dshop.ShippingAddress'),
        ),
        migrations.AddField(
            model_name='billingaddress',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dshop.Customer'),
        ),
        migrations.CreateModel(
            name='ProductVariableVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(max_length=255, unique=True, verbose_name='Product code')),
                ('unit_price', shop.money.fields.MoneyField(decimal_places=3, help_text='Net price for this product', verbose_name='Unit price')),
                ('quantity', models.PositiveIntegerField(default=0, help_text='Available quantity in stock', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantity')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='dshop.ProductVariable', verbose_name='Produit')),
            ],
            bases=(shop.models.product.AvailableProductMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProductTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('caption', djangocms_text_ckeditor.fields.HTMLField(blank=True, help_text='Description courte.', null=True, verbose_name='Caption')),
                ('description', djangocms_text_ckeditor.fields.HTMLField(blank=True, help_text='Description longue.', null=True, verbose_name='Description')),
                ('master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='dshop.Product')),
            ],
            options={
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProductVariableTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('description', djangocms_text_ckeditor.fields.HTMLField(help_text='Description longue.', verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='multilingual', to='dshop.ProductVariable')),
            ],
            options={
                'verbose_name': 'Produit variable Translation',
                'db_table': 'dshop_productvariable_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProductDefaultTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('description', djangocms_text_ckeditor.fields.HTMLField(help_text='Description longue.', verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='multilingual', to='dshop.ProductDefault')),
            ],
            options={
                'verbose_name': 'Produit par défaut Translation',
                'db_table': 'dshop_productdefault_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
